{% comment %}
  This snippet processes LINE login requests and handles authentication using Shopify's Storefront API
  Using the form trick for standard Shopify stores
{% endcomment %}

{% if request.path contains '/account/login' %}
  {% comment %}Debug section to show all available parameters{% endcomment %}
  <div class="line-login-debug" style="
    background: #f5f5f5;
    padding: 20px;
    margin: 20px 0;
    border-radius: 8px;
    font-family: monospace;
  ">
    <h3>Debug Info:</h3>
    <p>Path: {{ request.path }}</p>
    <p>Return URL: {{ request.params.return_url }}</p>
    <p>All params:</p>
    <ul>
    {% for param in request.params %}
      <li>{{ param[0] }}: {{ param[1] }}</li>
    {% endfor %}
    </ul>
  </div>

  <!-- Visible form for Shopify login -->
  <form id="shopify-auto-login" method="post" action="/account/login{% if request.params.return_url %}?return_to={{ request.params.return_url | url_encode }}{% endif %}" style="
    background: white;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 8px;
    margin: 20px 0;
  ">
    <div style="margin-bottom: 15px;">
      <label for="customer_email" style="display: block; margin-bottom: 5px;">Email</label>
      <input type="email" 
             name="customer[email]" 
             id="customer_email" 
             style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;"
             value="{{ request.params.customer_email }}"
      >
    </div>
    
    <div style="margin-bottom: 15px;">
      <label for="customer_password" style="display: block; margin-bottom: 5px;">Password (LINE Token)</label>
      <input type="password" 
             name="customer[password]" 
             id="customer_password"
             style="width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px;"
             value="{{ request.params.access_token }}"
      >
    </div>

    <input type="hidden" name="form_type" value="customer_login">
    <input type="hidden" name="utf8" value="âœ“">
    {% if request.params.return_url %}
      <input type="hidden" name="return_to" value="{{ request.params.return_url }}">
    {% endif %}
    
    <button type="submit" style="
      background: #06C755;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      width: 100%;
    ">Complete LINE Login</button>
  </form>

  <script>
    document.addEventListener('DOMContentLoaded', async function() {
      const customerEmail = '{{ request.params.customer_email }}';
      const lineUserId = '{{ request.params.line_id }}';
      const accessToken = '{{ request.params.access_token }}';
      const returnUrl = '{{ request.params.return_url }}';
      
      console.log('Debug - Received parameters:', {
        customerEmail,
        lineUserId,
        accessToken,
        returnUrl
      });
      
      try {
        // First show a loading message to indicate we're processing
        const infoMessage = document.createElement('div');
        infoMessage.className = 'line-login-info-message';
        infoMessage.innerHTML = `
          <style>
            .line-login-info-message {
              background-color: #f0f8f0;
              border: 1px solid #06C755;
              border-radius: 4px;
              padding: 15px;
              margin-bottom: 20px;
              text-align: center;
              color: #222;
            }
            .line-login-info-message h3 {
              color: #06C755;
              margin-top: 0;
            }
            .line-brand {
              color: #06C755;
              font-weight: bold;
            }
          </style>
          <h3>{{ 'line_login.handler.login_success' | t }}</h3>
          <p>{{ 'line_login.handler.logging_in' | t }}</p>
        `;

        // Insert message before the login form
        const loginForm = document.querySelector('#shopify-auto-login');
        if (loginForm) {
          loginForm.parentNode.insertBefore(infoMessage, loginForm);
        }
        
        // If we have all the necessary parameters, auto-submit after a delay
        if (customerEmail && accessToken) {
          console.log('Debug - Form will auto-submit in 1.5s');
          setTimeout(() => {
            console.log('Debug - Auto-submitting form...');
            loginForm.submit();
          }, 1500);
        } else {
          console.log('Debug - Missing required parameters, manual submission required');
        }
      } catch (error) {
        console.error('LINE login error:', error);
        // Show error message
        const errorMessage = document.createElement('div');
        errorMessage.className = 'line-login-error-message';
        errorMessage.innerHTML = `
          <style>
            .line-login-error-message {
              background-color: #fff0f0;
              border: 1px solid #ff4444;
              border-radius: 4px;
              padding: 15px;
              margin-bottom: 20px;
              text-align: center;
              color: #222;
            }
          </style>
          <p>{{ 'line_login.handler.login_error' | t }}</p>
          <p style="font-size: 0.9em; color: #666;">Error: ${error.message}</p>
        `;
        
        const loginForm = document.querySelector('#shopify-auto-login');
        if (loginForm) {
          loginForm.parentNode.insertBefore(errorMessage, loginForm);
        }
      }
    });
  </script>
{% endif %}
