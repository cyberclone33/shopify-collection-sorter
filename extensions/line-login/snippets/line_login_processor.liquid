{% comment %}
  This snippet processes LINE login requests and handles authentication using Shopify's Storefront API
  Using the form trick for standard Shopify stores
{% endcomment %}

{% if request.path contains '/account/login' %}
  {% comment %}Debug section to show all available parameters{% endcomment %}
  <div class="line-login-debug" style="
    background: #f5f5f5;
    padding: 20px;
    margin: 20px 0;
    border-radius: 8px;
    font-family: monospace;
    display: none;
  ">
    <h3>Debug Info:</h3>
    <p>Path: {{ request.path }}</p>
    <p>Return URL: {{ request.params.return_url }}</p>
    <p>Line Login: {{ request.params.line_login }}</p>
    <p>All params:</p>
    <ul>
    {% for param in request.params %}
      <li>{{ param[0] }}: {{ param[1] }}</li>
    {% endfor %}
    </ul>
  </div>

  <!-- Hidden form for Shopify login -->
  <form id="shopify-auto-login" method="post" action="/account/login{% if request.params.return_url %}?return_to={{ request.params.return_url | url_encode }}{% endif %}" style="display: none;">
    <input type="email" name="customer[email]" value="{{ request.params.customer_email }}">
    <input type="password" name="customer[password]" value="{{ request.params.access_token }}">
    <input type="hidden" name="form_type" value="customer_login">
    <input type="hidden" name="utf8" value="âœ“">
    {% if request.params.return_url %}
      <input type="hidden" name="return_to" value="{{ request.params.return_url }}">
    {% endif %}
  </form>

  <div class="line-login-message" style="
    background: white;
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 8px;
    margin: 20px 0;
    text-align: center;
  ">
    <div class="spinner" style="
      width: 40px;
      height: 40px;
      margin: 20px auto;
      border: 4px solid #f3f3f3;
      border-top: 4px solid #06C755;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    "></div>
    <style>
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
      .line-brand {
        color: #06C755;
        font-weight: bold;
      }
    </style>
    <h2>Welcome back, <span class="line-brand">{{ request.params.name }}</span>!</h2>
    <p>Completing your LINE login...</p>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const customerEmail = '{{ request.params.customer_email }}';
      const lineUserId = '{{ request.params.line_id }}';
      const accessToken = '{{ request.params.access_token }}';
      const returnUrl = '{{ request.params.return_url }}';
      const lineLogin = '{{ request.params.line_login }}';
      
      console.log('Debug - Received parameters:', {
        customerEmail,
        lineUserId,
        accessToken,
        returnUrl,
        lineLogin
      });
      
      // Only proceed with auto-login if this is a LINE login
      if (lineLogin === 'success' && customerEmail && accessToken) {
        console.log('Debug - Auto-submitting form in 1.5s');
        setTimeout(() => {
          console.log('Debug - Submitting form now');
          document.getElementById('shopify-auto-login').submit();
        }, 1500);
      } else {
        console.log('Debug - Not a LINE login or missing parameters');
        if (!lineLogin) console.log('Debug - Not a LINE login');
        if (!customerEmail) console.log('Debug - Missing email');
        if (!accessToken) console.log('Debug - Missing access token');
        
        // Show error message
        const message = document.querySelector('.line-login-message');
        if (message) {
          message.innerHTML = `
            <div style="color: #ff4444;">
              <h2>Login Error</h2>
              <p>Unable to complete LINE login. Please try again or contact support.</p>
              <p style="font-size: 0.9em; color: #666;">
                Missing parameters: ${[
                  !lineLogin && 'LINE login flag',
                  !customerEmail && 'email',
                  !accessToken && 'access token'
                ].filter(Boolean).join(', ')}
              </p>
            </div>
          `;
        }
      }
    });
  </script>
{% endif %}
