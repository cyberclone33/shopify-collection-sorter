{% comment %}
  Premium Pet Products Carousel by Alpha Dog
  An elegant, high-end carousel display for your premium pet products
{% endcomment %}

<!-- No external CSS needed for simple scroll slider -->

<div id="alpha-dog-carousel" class="alpha-dog-carousel">
  <div class="carousel-container">
    <style>
      /* Premium Pet Products Carousel */
      .alpha-dog-carousel {
        margin: 40px 0;
        overflow: hidden;
        position: relative;
        padding: 10px 5px 30px;
        max-width: 100%;
      }
      
      /* Elegant Header styling */
      .carousel-header {
        text-align: center;
        margin-bottom: 35px;
        position: relative;
        z-index: 2;
      }
      
      .carousel-header h2 {
        color: {{ block.settings.heading_color }};
        font-size: 28px;
        margin-bottom: 12px;
        font-weight: 600;
        letter-spacing: 0.02em;
        position: relative;
        display: inline-block;
      }
      
      .carousel-header h2::after {
        content: '';
        position: absolute;
        bottom: -8px;
        left: 50%;
        transform: translateX(-50%);
        width: 50px;
        height: 2px;
        background-color: {{ block.settings.heading_color }};
      }
      
      .carousel-header p {
        color: {{ block.settings.subtitle_color }};
        font-size: 15px;
        max-width: 700px;
        margin: 0 auto;
        line-height: 1.5;
        font-weight: 300;
      }
      
      /* Premium product card design - uniform size */
      .product-card, 
      .alpha-dog-product-card {
        position: relative;
        width: 100%;
        height: 100%;
        min-height: {{ block.settings.card_height }}px;
        max-height: {{ block.settings.card_height }}px;
        background-color: {{ block.settings.card_bg_color }};
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06);
        overflow: hidden;
        transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);
        cursor: pointer;
        display: flex;
        flex-direction: column;
        border: 1px solid rgba(240, 240, 240, 0.8);
      }
      
      /* Product image container - standardized size */
      .product-image-container {
        width: 100%;
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: {{ block.settings.image_bg_color }};
        flex-grow: 0;
        flex-shrink: 0;
        margin: 0;
        border-radius: 8px 8px 0 0;
        height: {{ block.settings.image_height }}px !important;
        min-height: {{ block.settings.image_height }}px !important;
        max-height: {{ block.settings.image_height }}px !important;
      }
      
      .product-card:hover,
      .alpha-dog-product-card:hover {
        transform: translateY(-6px);
        box-shadow: 0 12px 24px rgba(0, 0, 0, 0.08);
        border-color: rgba(220, 220, 220, 0.8);
      }
      
      .product-card:active,
      .alpha-dog-product-card:active {
        transform: translateY(-2px);
        transition: all 0.2s;
      }
      
      .product-image {
        width: 100%;
        height: {{ block.settings.image_height }}px;
        position: relative;
        overflow: hidden;
        background-color: {{ block.settings.image_bg_color }};
        flex-shrink: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 10px;
        transition: all 0.4s ease;
      }
      
      /* Removed red line behind product image */
      
      .product-image img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        display: block;
        transition: transform 0.7s cubic-bezier(0.22, 1, 0.36, 1);
        max-height: {{ block.settings.image_height }}px;
      }
      
      .product-card:hover .product-image img {
        transform: scale(1.08);
      }
      
      /* Elegant hover overlay */
      .product-image::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.02);
        opacity: 0;
        transition: opacity 0.5s ease;
      }
      
      .product-card:hover .product-image::after {
        opacity: 1;
      }
      
      /* Premium info section with soft gradient */
      .product-info {
        position: relative;
        bottom: 0;
        left: 0;
        width: 100%;
        padding: 18px 18px 60px; /* Increased padding at bottom to make room for button */
        background: white;
        color: #333;
        z-index: 1;
        overflow: visible; /* Changed to visible to ensure button shows */
        border-top: 1px solid rgba(240, 240, 240, 0.8);
        transition: all 0.3s ease;
      }
      
      .product-card:hover .product-info {
        background: linear-gradient(to bottom, #ffffff, #f9f9f9);
      }
      
      .product-title {
        font-size: 15px;
        font-weight: 500;
        margin-bottom: 6px;
        color: #333333;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
        letter-spacing: 0.01em;
      }
      
      /* Premium price display */
      .price-container {
        display: flex;
        align-items: baseline;
        margin-top: 6px;
        flex-wrap: wrap;
      }
      
      .current-price {
        font-weight: 600;
        color: {{ block.settings.badge_bg_color }};
        font-size: 16px;
        margin-right: 10px;
        letter-spacing: 0;
      }
      
      .original-price {
        text-decoration: line-through;
        color: #999;
        font-size: 13px;
        font-weight: 400;
      }
      
      /* Description text */
      .product-bio {
        font-size: 13px;
        color: #777;
        margin: 8px 0 6px;
        line-height: 1.4;
        max-height: 36px;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
      }
      
      /* Remove Tinder-style action buttons */
      
      /* Premium savings badge */
      .savings-badge {
        position: absolute;
        top: 12px;
        right: 12px;
        z-index: 10;
        background-color: {{ block.settings.badge_bg_color }};
        color: white;
        padding: 5px 12px;
        font-size: 11px;
        font-weight: 500;
        border-radius: 4px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        letter-spacing: 0.5px;
        text-transform: uppercase;
      }
      
      /* Elegant sale label */
      .photo-indicator {
        position: absolute;
        top: 12px;
        left: 12px;
        z-index: 10;
        background-color: rgba(255, 255, 255, 0.9);
        color: #333;
        padding: 5px 12px;
        font-size: 10px;
        font-weight: 600;
        border-radius: 4px;
        letter-spacing: 0.5px;
        text-transform: uppercase;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
      }
      
      /* Elegant slide transitions */
      @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
      }
      
      /* Removed all class-based button styles in favor of inline styles */
      
      .add-to-cart:hover {
        background-color: {{ block.settings.badge_bg_color }};
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
      }
      
      /* Enhanced add to cart button position & style */
      .add-to-cart {
        position: relative;
        bottom: auto;
        left: auto;
        right: auto;
        padding: 8px 12px;
        color: white;
        background-color: {{ block.settings.button_bg_color }};
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: 500;
        font-size: 12px;
        transition: all 0.3s ease;
        z-index: 3;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin: 8px 0 10px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
      }
      
      /* Override any theme styling that adds "Shop now to" text */
      .alpha-dog-carousel .product-card::before,
      .alpha-dog-carousel .product-card::after,
      .alpha-dog-carousel .add-to-cart::before,
      .alpha-dog-product-card::before,
      .alpha-dog-product-card::after,
      .alpha-dog-product-card .add-to-cart::before {
        content: none !important;
        display: none !important;
      }
      
      /* Additional overrides to prevent theme interference */
      .alpha-dog-carousel .add-to-cart,
      .alpha-dog-product-card .add-to-cart {
        margin-left: 0 !important;
        margin-right: 0 !important;
        width: auto !important;
        text-align: center !important;
      }
      
      /* Extra specificity for the .alpha-dog-product-card */
      .alpha-dog-product-card {
        position: relative !important;
        overflow: hidden !important;
      }
      
      /* Enhanced button styling with !important to override theme styles */
      .alpha-dog-product-card .add-to-cart {
        position: absolute !important;
        bottom: 10px !important;
        left: 10px !important;
        color: {{ block.settings.button_text_color }} !important;
        background-color: {{ block.settings.button_bg_color }} !important;
        text-decoration: none !important;
      }
      
      /* Make sure there's no "Shop now" text before the button */
      .alpha-dog-product-card .add-to-cart::before,
      .alpha-dog-product-card .add-to-cart::after {
        content: none !important;
        display: none !important;
      }
      
      /* We can't use :contains() as it's not widely supported */
      
      /* Hide any element with class names that might contain "shop-now" */
      .alpha-dog-product-card [class*="shop-now"],
      .alpha-dog-product-card [class*="shopnow"],
      .alpha-dog-product-card .shop-now-text,
      .alpha-dog-product-card .shop-text,
      .alpha-dog-product-card .product-shop-now {
        display: none !important;
      }
      
      /* Override the second hover style to match the first one */
      
      .add-to-cart:active {
        transform: translateY(0);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      
      /* Enhanced carousel styling with mobile slider and grid for large screens */
      .alpha-dog-carousel {
        margin: 40px 0;
        background-color: transparent;
        padding: 10px 0 30px;
        position: relative;
        -webkit-overflow-scrolling: touch;
        width: 100%;
        box-sizing: border-box;
      }
      
      /* Products container for better organization */
      .products-container {
        width: 100%;
        position: relative;
        margin: 0 auto;
      }
      
      /* Mobile slider with touch controls */
      .products-scroll {
        width: 100%;
        overflow-x: auto;
        overflow-y: hidden;
        white-space: nowrap;
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
        scroll-snap-type: x mandatory;
        -webkit-overflow-scrolling: touch;
        padding: 10px 0 25px;
        position: relative;
      }
      
      .products-scroll::-webkit-scrollbar {
        display: none; /* Chrome, Safari and Opera */
      }
      
      /* Mobile slider indicators */
      .scroll-indicators {
        display: none;
        text-align: center;
        margin-top: 15px;
      }
      
      .scroll-dot {
        display: inline-block;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: #ddd;
        margin: 0 4px;
        transition: background-color 0.3s ease;
      }
      
      .scroll-dot.active {
        background-color: {{ block.settings.badge_bg_color }};
      }
      
      /* Swipe instruction for mobile */
      .swipe-instruction {
        display: none;
        text-align: center;
        font-size: 12px;
        color: #888;
        margin-top: 10px;
        padding: 5px;
      }
      
      /* Product slide styling */
      .product-slide {
        display: inline-block;
        vertical-align: top;
        white-space: normal;
        height: auto;
        width: 280px;
        padding: 4px;
        margin-right: 10px;
        scroll-snap-align: start;
        position: relative;
      }
      
      /* Ensure proper width and layout on desktop */
      @media (min-width: 1024px) {
        .alpha-dog-carousel .carousel-container {
          padding: 0 20px; 
        }
      }
      
      /* Left and right slider controls for mobile */
      .slider-controls {
        display: none;
        position: absolute;
        top: 50%;
        width: 100%;
        transform: translateY(-50%);
        z-index: 5;
        pointer-events: none;
      }
      
      .slider-control {
        position: absolute;
        width: 40px;
        height: 40px;
        background: rgba(255, 255, 255, 0.9);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        pointer-events: auto;
      }
      
      .slider-prev {
        left: 10px;
      }
      
      .slider-next {
        right: 10px;
      }
      
      /* Large screen grid layout - fixed for desktop display */
      @media (min-width: 1024px) {
        .alpha-dog-carousel {
          overflow: visible;
        }
        
        .products-container {
          max-width: 1200px;
          margin: 0 auto;
          padding: 0 15px;
        }
        
        .products-scroll {
          display: grid;
          grid-template-columns: repeat(4, 1fr);
          grid-template-rows: auto auto;
          grid-gap: 20px;
          white-space: normal;
          overflow: visible;
          padding: 0;
          height: auto;
          max-height: none;
        }
        
        .product-slide {
          width: 100%;
          margin-right: 0;
          display: block;
          white-space: normal;
          padding: 0;
          height: 100%;
        }
        
        /* Limit to 2 rows x 4 columns (8 items) */
        .product-slide:nth-child(n+9) {
          display: none;
        }
        
        /* Ensure all items are properly positioned */
        .alpha-dog-product-card,
        .product-card {
          height: 100%;
          width: 100%;
          max-height: none;
          min-height: {{ block.settings.card_height }}px;
        }
        
        /* Ensure consistent product card heights */
        .product-image-container {
          height: {{ block.settings.image_height }}px !important;
        }
      }
      
      @media (hover: hover) {
        .product-slide:hover .product-card {
          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
        }
      }
      
      /* Add slight padding to carousel container */
      .carousel-container {
        padding: 0 5px;
      }
      
      /* Enhanced responsive adjustments */
      @media (min-width: 1024px) {
        /* Desktop grid layout - 4 products per row, 2 rows */
        .products-container {
          max-width: 1200px;
          margin: 0 auto;
        }
        
        .products-scroll {
          overflow: visible;
        }
        
        .slider-controls,
        .scroll-indicators,
        .swipe-instruction {
          display: none !important;
        }
      }
      
      /* Tablet styles */
      @media (min-width: 768px) and (max-width: 1023px) {
        .products-scroll {
          display: grid;
          grid-template-columns: repeat(3, 1fr);
          gap: 15px;
          white-space: normal;
          overflow: visible;
        }
        
        .product-slide {
          width: 100%;
          margin-right: 0;
        }
        
        .product-card {
          min-height: 340px;
        }
        
        .product-image {
          height: 200px;
        }
        
        .slider-controls,
        .scroll-indicators,
        .swipe-instruction {
          display: none !important;
        }
      }
      
      /* Mobile styles with enhanced slider */
      @media (max-width: 767px) {
        .slider-controls {
          display: block;
        }
        
        .scroll-indicators {
          display: block;
        }
        
        .swipe-instruction {
          display: block;
        }
        
        .product-slide {
          width: 240px;
        }
        
        .product-card {
          min-height: 300px;
        }
        
        .product-image {
          height: 160px;
        }
      }
      
      /* Small mobile devices */
      @media (max-width: 480px) {
        .alpha-dog-carousel {
          padding: 5px;
        }
        
        .product-slide {
          padding: 4px;
          width: 180px;
          margin-right: 8px;
        }
        
        .product-card {
          min-height: 280px;
          border-radius: 6px;
        }
        
        .product-image-container {
          height: 160px !important;
        }
        
        .product-info {
          padding: 8px;
        }
        
        .product-title {
          font-size: 12px;
          -webkit-line-clamp: 1;
          margin-bottom: 2px;
        }
        
        .current-price {
          font-size: 11px;
          margin-right: 4px;
        }
        
        .original-price {
          font-size: 10px;
        }
        
        .product-bio {
          font-size: 10px;
          margin: 4px 0;
        }
        
        .photo-indicator, .savings-badge {
          font-size: 9px;
          padding: 2px 4px;
        }
        
        .slider-control {
          width: 30px;
          height: 30px;
        }
      }
      
      /* Pagination and navigation styles removed */
      /* Custom scrollbar */
      .custom-scrollbar::-webkit-scrollbar {
        width: 8px;
        height: 8px;
      }
      
      .custom-scrollbar::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
      }
      
      .custom-scrollbar::-webkit-scrollbar-thumb {
        background: #cccccc;
        border-radius: 10px;
      }
      
      .custom-scrollbar::-webkit-scrollbar-thumb:hover {
        background: {{ block.settings.pagination_active_color }};
      }
      
      /* Additional features */
      .product-rating {
        display: flex;
        align-items: center;
        margin-top: 8px;
      }
      
      .rating-stars {
        display: flex;
        color: #ffcc00;
        margin-right: 5px;
      }
      
      .availability {
        color: #22c55e;
        font-size: 12px;
        margin-top: 5px;
        font-weight: 500;
      }
      
      .product-meta {
        display: flex;
        margin-top: 8px;
        font-size: 12px;
        opacity: 0.8;
      }
      
      .product-meta span {
        margin-right: 15px;
      }
      
      /* Quick view features */
      .quick-view {
        opacity: 0;
        position: absolute;
        left: 0;
        right: 0;
        top: 50%;
        text-align: center;
        transform: translateY(-50%);
        transition: opacity 0.3s ease;
        pointer-events: none;
        z-index: 2;
      }
      
      .quick-view-btn {
        background: {{ block.settings.button_bg_color }};
        color: {{ block.settings.button_text_color }};
        border: none;
        padding: 8px 15px;
        font-weight: 600;
        border-radius: 4px;
        cursor: pointer;
        box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        pointer-events: auto;
      }
      
      .product-card:hover .quick-view {
        opacity: 1;
      }
      
      /* Responsive design */
      @media screen and (max-width: 767px) {
        .swiper-button-next,
        .swiper-button-prev {
          display: flex;
        }
        
        .product-title {
          font-size: 16px;
        }
        
        .current-price {
          font-size: 14px;
        }
      }
      
      /* Debug styling */
      .debug-info {
        margin-top: 20px;
        padding: 15px;
        background-color: #f5f5f5;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 12px;
        display: none;
      }
      
      {% if block.settings.show_debug %}
      .debug-info {
        display: block;
      }
      {% endif %}
    </style>

    <div class="carousel-header">
      <h2>{{ block.settings.heading_text }}</h2>
      <p>{{ block.settings.subtitle_text }}</p>
    </div>

    <!-- Enhanced Carousel with Mobile Slider and Desktop Grid -->
    <div class="products-container">
      <!-- Mobile Slider Controls -->
      <div class="slider-controls">
        <div class="slider-control slider-prev" onclick="slideCarousel('prev')">
          <svg width="12" height="12" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M15 6L9 12L15 18" stroke="#333" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <div class="slider-control slider-next" onclick="slideCarousel('next')">
          <svg width="12" height="12" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M9 6L15 12L9 18" stroke="#333" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
      </div>
      
      <!-- Swipe Instruction for Mobile -->
      <div class="swipe-instruction">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="vertical-align: middle; margin-right: 5px;">
          <path d="M14 6L18 10M18 10L14 14M18 10H6" stroke="#888" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        Swipe to see more products
      </div>
      
      <!-- Products Scroll Container -->
      <div class="products-scroll" id="products-scroll">
        {% assign custom_tag = block.settings.product_tag | default: 'DailyDiscount_每日優惠' %}
        {% assign max_products = block.settings.max_products | default: 12 %}
        {% assign max_desktop_products = 8 %}
        {% assign counter = 0 %}
        {% assign total_products = 0 %}
        {% assign discounted_products = 0 %}
        
        {% comment %} 
          Approach 1: Try to use a collection with the tag name if it exists 
        {% endcomment %}
        {% assign tag_handle = custom_tag | handleize %}
        {% if collections[tag_handle] != blank and collections[tag_handle].products.size > 0 %}
          {% assign products_to_check = collections[tag_handle].products %}
        {% else %}
          {% comment %} 
            Approach 2: Use all products and check tags manually 
          {% endcomment %}
          {% assign products_to_check = collections.all.products %}
        {% endif %}
        
        {% assign total_products = products_to_check.size %}
        
        {% comment %} Display all products for comparison in debug mode {% endcomment %}
        {% if block.settings.show_debug %}
          <div class="debug-info">
            <p><strong>Using all products for display (debug mode)</strong></p>
          </div>
        {% endif %}
        
        {% for product in products_to_check %}
          {% assign should_display = false %}
          
          {% comment %} Check if product has the required tag {% endcomment %}
          {% if block.settings.show_all_products %}
            {% assign should_display = true %}
          {% else %}
            {% for tag in product.tags %}
              {% if tag == custom_tag %}
                {% assign should_display = true %}
                {% break %}
              {% endif %}
            {% endfor %}
          {% endif %}
          
          {% if should_display or block.settings.show_all_products %}
            {% if counter < max_products %}
              {% assign current_variant = product.selected_or_first_available_variant %}
              {% if current_variant.compare_at_price > current_variant.price or block.settings.show_non_discounted %}
                {% assign discounted_products = discounted_products | plus: 1 %}
                {% assign savings_amount = current_variant.compare_at_price | minus: current_variant.price %}
                {% assign savings_percentage = savings_amount | times: 100 | divided_by: current_variant.compare_at_price | round | at_least: 1 %}
                
                <div class="product-slide">
                  <div class="product-card" style="position: relative; background: white; border-radius: 8px; box-shadow: 0 3px 10px rgba(0,0,0,0.08); overflow: hidden; height: 100%; display: flex; flex-direction: column;">
                    <!-- Product Image Section -->
                    <a href="{{ product.url }}" style="text-decoration: none; display: block;">
                      <div class="product-image-container" style="height: {{ block.settings.image_height }}px; padding: 0; object-fit: contain; display: flex; align-items: center; justify-content: center;">
                        {% if product.featured_image %}
                          <img src="{{ product.featured_image | image_url: width: 400 }}" 
                               alt="{{ product.title }}" 
                               style="width: 100%; height: 100%; object-fit: contain; max-width: 100%; max-height: {{ block.settings.image_height }}px;" 
                               loading="lazy"
                               width="400" 
                               height="{{ block.settings.image_height }}">
                        {% else %}
                          <img src="{{ 'placeholder-image.jpg' | asset_url }}" 
                               alt="{{ product.title }}" 
                               style="width: 100%; height: 100%; object-fit: cover; max-width: 100%;" 
                               loading="lazy"
                               width="400" 
                               height="{{ block.settings.image_height }}">
                        {% endif %}
                        
                        <!-- Sale badge -->
                        <div style="position: absolute; top: 8px; left: 8px; background-color: rgba(0,0,0,0.7); color: white; padding: 4px 8px; font-size: 11px; border-radius: 4px; font-weight: 500; text-transform: uppercase; z-index: 5;">SALE</div>
                        
                        {% if current_variant.compare_at_price > current_variant.price %}
                          <div style="position: absolute; top: 8px; right: 8px; background-color: {{ block.settings.badge_bg_color }}; color: white; padding: 4px 8px; font-size: 11px; border-radius: 4px; font-weight: 500; z-index: 5;">{{ savings_percentage }}% OFF</div>
                        {% endif %}
                      </div>
                      
                      <!-- Product Info Section -->
                      <div style="padding: 12px 12px 60px; border-top: 1px solid #f0f0f0;">
                        <div style="font-size: 15px; font-weight: 500; margin-bottom: 6px; color: #333; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">{{ product.title }}</div>
                        
                        {% if current_variant.title != 'Default Title' %}
                        <div style="font-size: 12px; color: #666; margin-bottom: 6px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                          Variant: {{ current_variant.title }}
                        </div>
                        {% endif %}
                        
                        <div style="display: flex; align-items: baseline; margin-top: 4px;">
                          <div style="font-weight: 600; color: {{ block.settings.badge_bg_color }}; font-size: 16px; margin-right: 8px;">{{ current_variant.price | money }}</div>
                          {% if current_variant.compare_at_price > current_variant.price %}
                            <div style="text-decoration: line-through; color: #999; font-size: 13px;">{{ current_variant.compare_at_price | money }}</div>
                          {% endif %}
                        </div>
                      </div>
                    </a>
                    
                    <!-- Add to Cart Button - Always Visible -->
                    <div style="position: absolute; bottom: 15px; left: 15px; width: calc(100% - 30px); z-index: 100;">
                      <button 
                          onclick="addToCart('{{ current_variant.id }}')" 
                          {% unless current_variant.available %}disabled{% endunless %}
                          style="width: 100%; 
                                 padding: 10px 0; 
                                 background-color: {{ block.settings.button_bg_color }}; 
                                 color: white; 
                                 border: none; 
                                 border-radius: 4px; 
                                 font-weight: 500; 
                                 font-size: 12px; 
                                 text-transform: uppercase; 
                                 cursor: pointer;
                                 display: block !important;
                                 opacity: 1 !important;
                                 visibility: visible !important;">
                        {% if current_variant.available %}
                          ADD TO CART
                        {% else %}
                          SOLD OUT
                        {% endif %}
                      </button>
                    </div>
                  </div>
                </div>
                {% assign counter = counter | plus: 1 %}
              {% endif %}
            {% endif %}
          {% endif %}
        {% endfor %}
      </div>
      
      <!-- Scroll Indicators for Mobile -->
      <div class="scroll-indicators" id="scroll-indicators">
        <!-- Dots will be dynamically generated by JavaScript -->
      </div>
    </div>
    
    {% if counter == 0 %}
      <p style="text-align: center; margin: 50px 0; color: #666;">
        No discounted products available with the selected tag.
      </p>
    {% endif %}
    
    {% if block.settings.show_debug %}
    <div class="debug-info custom-scrollbar">
      <h4>Debug Information</h4>
      <p>Looking for tag: "{{ custom_tag }}"</p>
      <p>Tag handle: "{{ tag_handle }}"</p>
      <p>Collection with tag exists: {% if collections[tag_handle] != blank %}Yes{% else %}No{% endif %}</p>
      <p>Total products checked: {{ total_products }}</p>
      <p>Products with discounts: {{ discounted_products }}</p>
      <p>Products displayed: {{ counter }}</p>
      
      <h4>All Available Tags</h4>
      <div style="display: flex; flex-wrap: wrap; gap: 8px; max-height: 150px; overflow-y: auto;" class="custom-scrollbar">
        {% assign all_tags = collections.all.products | map: 'tags' | join: ',' | split: ',' | uniq | sort %}
        {% for tag in all_tags %}
          <div style="background: #eee; padding: 5px 10px; border-radius: 4px; margin-bottom: 4px;">{{ tag }}</div>
        {% endfor %}
      </div>

      <h4>Search Options</h4>
      <p>Try using the tags exactly as shown above. You can also try the following approaches:</p>
      <ol>
        <li>Change the tag to use an exact tag from the list above</li>
        <li>Create a collection with the same name as your tag</li>
        <li>Check "Show All Discounted Products" to see all available discounted products</li>
      </ol>
      
      <h4>Test Products</h4>
      <div style="max-height: 300px; overflow-y: auto; border: 1px solid #ddd; padding: 10px; margin-top: 10px;" class="custom-scrollbar">
        <p><strong>First 10 products and their tags:</strong></p>
        {% for product in collections.all.products limit: 10 %}
          <div style="margin-bottom: 15px; padding-bottom: 10px; border-bottom: 1px solid #eee;">
            <strong>{{ product.title }}</strong><br>
            Tags: 
            {% if product.tags.size > 0 %}
              {% for tag in product.tags %}
                <span style="background: #f5f5f5; padding: 2px 6px; margin-right: 4px; border-radius: 3px; font-size: 11px;">{{ tag }}</span>
              {% endfor %}
            {% else %}
              <em>No tags</em>
            {% endif %}
          </div>
        {% endfor %}
      </div>
    </div>
    {% endif %}
  </div>
  
  <!-- Simple "Add to cart" functionality -->
  <script>
    // Mobile Slider Functions
    document.addEventListener('DOMContentLoaded', function() {
      const productsScroll = document.getElementById('products-scroll');
      const scrollIndicators = document.getElementById('scroll-indicators');
      
      if (!productsScroll || !scrollIndicators) return;
      
      // Get all product slides
      const slides = productsScroll.querySelectorAll('.product-slide');
      const slideCount = slides.length;
      
      // Only initialize mobile slider if we have slides and we're on mobile
      if (slideCount > 0 && window.innerWidth < 768) {
        initMobileSlider(productsScroll, scrollIndicators, slides, slideCount);
      }
      
      // Update on window resize
      window.addEventListener('resize', function() {
        if (window.innerWidth < 768) {
          // Mobile view
          if (scrollIndicators.children.length === 0 && slideCount > 0) {
            initMobileSlider(productsScroll, scrollIndicators, slides, slideCount);
          }
        } else {
          // Desktop/Tablet view - clear indicators
          scrollIndicators.innerHTML = '';
        }
      });
    });
    
    // Initialize the mobile slider
    function initMobileSlider(productsScroll, scrollIndicators, slides, slideCount) {
      // Create scroll indicators (dots)
      scrollIndicators.innerHTML = '';
      for (let i = 0; i < slideCount; i++) {
        const dot = document.createElement('span');
        dot.className = 'scroll-dot';
        if (i === 0) dot.classList.add('active');
        dot.dataset.index = i;
        dot.addEventListener('click', function() {
          const index = parseInt(this.dataset.index);
          const slideElement = slides[index];
          if (slideElement) {
            slideElement.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });
          }
        });
        scrollIndicators.appendChild(dot);
      }
      
      // Update active dot on scroll
      let scrollTimeout;
      productsScroll.addEventListener('scroll', function() {
        if (scrollTimeout) {
          clearTimeout(scrollTimeout);
        }
        
        scrollTimeout = setTimeout(function() {
          updateActiveDot(productsScroll, slides);
        }, 50);
      });
      
      // Initial dot update
      updateActiveDot(productsScroll, slides);
      
      // Add touch tracking for swipe gestures
      let touchStartX = 0;
      let touchEndX = 0;
      
      productsScroll.addEventListener('touchstart', function(e) {
        touchStartX = e.touches[0].clientX;
      }, false);
      
      productsScroll.addEventListener('touchend', function(e) {
        touchEndX = e.changedTouches[0].clientX;
        handleSwipe();
      }, false);
      
      function handleSwipe() {
        const threshold = 50; // Minimum distance required for a swipe
        
        // Calculate direction
        if (touchEndX < touchStartX - threshold) {
          // Swipe left (next)
          slideCarousel('next');
        } else if (touchEndX > touchStartX + threshold) {
          // Swipe right (prev)
          slideCarousel('prev');
        }
      }
    }
    
    // Update the active scroll indicator dot
    function updateActiveDot(productsScroll, slides) {
      const dots = document.querySelectorAll('.scroll-dot');
      if (!dots.length) return;
      
      const scrollLeft = productsScroll.scrollLeft;
      const containerWidth = productsScroll.clientWidth;
      
      // Find the slide that is most visible
      let activeIndex = 0;
      let bestVisibility = 0;
      
      slides.forEach((slide, index) => {
        const slideLeft = slide.offsetLeft - productsScroll.offsetLeft;
        const slideRight = slideLeft + slide.offsetWidth;
        
        // Calculate how much of the slide is visible in the container
        const visibleLeft = Math.max(0, slideLeft);
        const visibleRight = Math.min(slideRight, scrollLeft + containerWidth);
        const visibleWidth = Math.max(0, visibleRight - visibleLeft);
        
        // Update if this slide is more visible than the previous best
        if (visibleWidth > bestVisibility) {
          bestVisibility = visibleWidth;
          activeIndex = index;
        }
      });
      
      // Update active dot
      dots.forEach((dot, index) => {
        if (index === activeIndex) {
          dot.classList.add('active');
        } else {
          dot.classList.remove('active');
        }
      });
    }
    
    // Handle slider control clicks
    function slideCarousel(direction) {
      const productsScroll = document.getElementById('products-scroll');
      if (!productsScroll) return;
      
      const slideWidth = productsScroll.querySelector('.product-slide')?.offsetWidth || 240;
      const scrollAmount = direction === 'next' ? slideWidth : -slideWidth;
      
      productsScroll.scrollBy({
        left: scrollAmount,
        behavior: 'smooth'
      });
    }
    
    // Function to add product to cart
    function addToCart(variantId) {
      // Change button text to indicate loading
      const button = event.target;
      const originalText = button.textContent;
      button.textContent = 'ADDING...';
      button.disabled = true;
      
      // Add to cart using Shopify AJAX API
      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({
          id: variantId,
          quantity: 1
        })
      })
      .then(response => response.json())
      .then(data => {
        // Success - update the cart count and notify the user
        button.textContent = 'ADDED!';
        setTimeout(() => {
          button.textContent = originalText;
          button.disabled = false;
        }, 2000);
        
        // Refresh cart drawer/count if applicable
        if (typeof window.refreshCart === 'function') {
          window.refreshCart();
        }
      })
      .catch(error => {
        // Error handling
        console.error('Error adding product to cart:', error);
        button.textContent = 'ERROR';
        setTimeout(() => {
          button.textContent = originalText;
          button.disabled = false;
        }, 2000);
      });
    }
    
    {% if block.settings.autoplay %}
    // Enhanced auto-scroll functionality for autoplay (mobile only)
    document.addEventListener('DOMContentLoaded', function() {
      const productsScroll = document.getElementById('products-scroll');
      if (productsScroll && window.innerWidth < 1024) { // Only autoplay on mobile and tablet
        let currentIndex = 0;
        const slides = productsScroll.querySelectorAll('.product-slide');
        const slideCount = slides.length;
        const scrollPause = {{ block.settings.autoplay_delay }};
        
        let autoplayTimer = null;
        
        function startAutoplay() {
          if (autoplayTimer) return;
          
          autoplayTimer = setInterval(function() {
            currentIndex = (currentIndex + 1) % slideCount;
            const targetSlide = slides[currentIndex];
            
            if (targetSlide) {
              targetSlide.scrollIntoView({
                behavior: 'smooth',
                block: 'nearest',
                inline: 'start'
              });
              
              // Update dots
              const dots = document.querySelectorAll('.scroll-dot');
              dots.forEach((dot, index) => {
                if (index === currentIndex) {
                  dot.classList.add('active');
                } else {
                  dot.classList.remove('active');
                }
              });
            }
          }, scrollPause);
        }
        
        // Pause autoplay on user interaction
        function pauseAutoplay() {
          clearInterval(autoplayTimer);
          autoplayTimer = null;
        }
        
        // Listeners for user interaction
        productsScroll.addEventListener('mouseenter', pauseAutoplay);
        productsScroll.addEventListener('touchstart', pauseAutoplay);
        
        // Don't auto-restart on desktop
        if (window.innerWidth < 768) {
          productsScroll.addEventListener('mouseleave', startAutoplay);
        }
        
        // Start autoplay after initial delay
        setTimeout(startAutoplay, scrollPause);
        
        // Update behavior when window is resized
        window.addEventListener('resize', function() {
          if (window.innerWidth >= 1024) {
            // Stop autoplay on desktop
            pauseAutoplay();
          } else if (!autoplayTimer && window.innerWidth < 768) {
            // Restart on mobile if stopped
            startAutoplay();
          }
        });
      }
    });
    {% endif %}
  </script>
</div>

{% schema %}
{
  "name": "Product Carousel",
  "target": "section",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "product_tag",
      "label": "Product Tag",
      "default": "DailyDiscount_每日優惠"
    },
    {
      "type": "text",
      "id": "heading_text",
      "label": "Heading",
      "default": "Exclusive Deals & Offers"
    },
    {
      "type": "text",
      "id": "subtitle_text",
      "label": "Subtitle",
      "default": "Discover our curated selection of premium products"
    },
    {
      "type": "range",
      "id": "max_products",
      "min": 1,
      "max": 24,
      "step": 1,
      "label": "Max Products",
      "default": 12
    },
    {
      "type": "header",
      "content": "Design"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading Color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "subtitle_color",
      "label": "Subtitle Color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "card_bg_color",
      "label": "Card Background",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "card_height",
      "min": 280,
      "max": 500,
      "step": 10,
      "label": "Card Height",
      "default": 380
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 150,
      "max": 350,
      "step": 10,
      "label": "Image Height",
      "default": 260
    },
    {
      "type": "select",
      "id": "card_shadow",
      "label": "Card Shadow",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "0 2px 5px rgba(0, 0, 0, 0.05)",
          "label": "Light"
        },
        {
          "value": "0 3px 10px rgba(0, 0, 0, 0.08)",
          "label": "Medium"
        },
        {
          "value": "0 5px 15px rgba(0, 0, 0, 0.12)",
          "label": "Bold"
        }
      ],
      "default": "0 3px 10px rgba(0, 0, 0, 0.08)"
    },
    {
      "type": "color",
      "id": "badge_bg_color",
      "label": "Sale Badge Color",
      "default": "#FF385C"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#ffffff"
    },
    {
      "type": "select",
      "id": "overlay_gradient_style",
      "label": "Overlay Style",
      "options": [
        {
          "value": "gradient",
          "label": "Gradient"
        },
        {
          "value": "solid",
          "label": "Solid"
        },
        {
          "value": "none",
          "label": "None"
        }
      ],
      "default": "gradient"
    },
    {
      "type": "color",
      "id": "overlay_color",
      "label": "Overlay Color",
      "default": "rgba(0,0,0,0.7)"
    },
    {
      "type": "checkbox",
      "id": "badge_round",
      "label": "Rounded Badges",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_pagination",
      "label": "Show Pagination",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show Navigation",
      "default": true
    }, 
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable Autoplay",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "loop",
      "label": "Infinite Loop",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_all_products",
      "label": "Show All Discounted",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "navigation_round",
      "label": "Round Navigation",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_delay",
      "min": 1000,
      "max": 9000,
      "step": 1000,
      "label": "Autoplay Delay",
      "default": 3000
    }
  ]
}
{% endschema %}